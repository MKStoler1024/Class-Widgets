name: Sign Application

on:
  workflow_call:
    inputs:
      manifest_artifact:
        required: true
        type: string
        description: '需要签名的清单文件制品名称'
      executable_name:
        required: true
        type: string
        description: '清单文件中需要签名的可执行文件名称'
    outputs:
      signed_executable_artifact:
        description: '签名后的可执行文件制品名称'
        value: ${{ jobs.sign.outputs.signed_executable_artifact }}
    secrets:
      SIGNPATH_API_TOKEN:
        required: true

jobs:
  sign:
    runs-on: windows-latest
    outputs:
      signed_executable_artifact: ${{ steps.upload-signed.outputs.artifact-name || '' }}
    steps:
      - name: Download manifest artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ inputs.manifest_artifact }}
          path: ./manifest

      - name: Extract executable for signing
        shell: pwsh
        run: |
          # 查找指定的可执行文件
          $exeFile = Get-ChildItem -Path ./manifest -Filter "${{ inputs.executable_name }}" -Recurse | Select-Object -First 1
          if ($exeFile) {
            New-Item -ItemType Directory -Path "./exe-for-signing" -Force | Out-Null
            Copy-Item $exeFile.FullName -Destination "./exe-for-signing/${{ inputs.executable_name }}" -Force
            Write-Host "[DEBUG] 找到可执行文件: $($exeFile.FullName)"
          } else {
            Write-Error "[DEBUG] 未找到可执行文件: ${{ inputs.executable_name }}"
            exit 1
          }

      - name: Upload executable for signing
        id: upload-for-signing
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.executable_name }}-unsigned
          path: ./exe-for-signing

      - name: Sign executable
        id: sign-exe
        uses: signpath/github-action-submit-signing-request@v1
        with:
          api-token: "${{ secrets.SIGNPATH_API_TOKEN }}"
          organization-id: "2e13633d-4e7d-4462-9091-27536751c84c"
          project-slug: "Class-Widgets.git"
          signing-policy-slug: "release-signing"
          github-artifact-id: "${{ steps.upload-for-signing.outputs.artifact-id }}"
          wait-for-completion: true
          output-artifact-directory: "./signed-output"

      - name: Upload signed executable
        id: upload-signed
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.executable_name }}-signed
          path: ./signed-output
        continue-on-error: false

      - name: Verify signing success
        shell: pwsh
        run: |
          if ("${{ steps.upload-signed.outcome }}" -eq "success") {
            Write-Host "[DEBUG] 签名成功，已上传签名后的可执行文件"
          } else {
            Write-Error "[DEBUG] 签名失败，未上传文件"
            exit 1
          }
